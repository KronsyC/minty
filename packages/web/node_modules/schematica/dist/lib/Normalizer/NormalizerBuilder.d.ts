import { GenericSchema, StringSchema, NumberSchema, BooleanSchema, AnySchema, ArraySchema, ObjectSchema } from "../../Schemas";
import Validator from "../Validator/Validator";
export interface BuildNormalizerOptions {
    isChild?: boolean;
    asFunction?: boolean;
}
export default class NormalizerBuilder {
    private validator;
    constructor(validator: Validator);
    buildStringNormalizer(schema: StringSchema): string;
    buildNumberNormalizer(schema: NumberSchema): string;
    buildBooleanNormalizer(schema: BooleanSchema): string;
    buildAnyNormalizer(schema: AnySchema): string;
    buildObjectNormalizer(schema: ObjectSchema): string;
    buildArrayNormalizer(schema: ArraySchema): string;
    build(schema: GenericSchema, options?: BuildNormalizerOptions): string | Function;
}
