import { BaseSchema, BaseSchemaTemplate } from "./__BaseSchema";
import { GenericSchema, GenericSchemaTemplate } from "./Schema";
import { SchemaType } from ".";
export interface ObjectSchemaTemplate extends BaseSchemaTemplate {
    type: "object";
    strict?: boolean;
    required?: string[];
    properties?: {
        [x: string]: GenericSchemaTemplate | SchemaType | string;
    };
}
export declare class ObjectSchema extends BaseSchema<ObjectSchemaTemplate> {
    strict: boolean;
    required: string[];
    properties: Map<string, GenericSchema>;
    typecheck: string;
    constructor(template: ObjectSchemaTemplate, schemaRefStore: Map<string, GenericSchema>);
    validateSchema(): void;
}
