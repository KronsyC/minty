import { BaseSchema, BaseSchemaTemplate } from "./__BaseSchema";
import { GenericSchema, GenericSchemaTemplate } from "./Schema";
export interface ArraySchemaTemplate extends BaseSchemaTemplate {
    type: "array";
    items: (string | GenericSchemaTemplate)[];
    strict?: boolean;
    minSize?: number;
    maxSize?: number;
}
export declare class ArraySchema extends BaseSchema<ArraySchemaTemplate> {
    items: Set<GenericSchema>;
    strict: boolean;
    minSize: number;
    maxSize: number;
    typecheck: string;
    constructor(template: ArraySchemaTemplate, schemaRefStore: Map<string, GenericSchema>);
    validateSchema(): void;
}
