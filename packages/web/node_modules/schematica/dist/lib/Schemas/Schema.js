"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPresetByName = void 0;
var _1 = require(".");
function createSchema(constructor, schemaRefStore) {
    if (schemaRefStore === void 0) { schemaRefStore = new Map(); }
    switch (constructor.type) {
        case "any":
            return new _1.AnySchema(constructor);
        case "string":
            return new _1.StringSchema(constructor);
        case "boolean":
            return new _1.BooleanSchema(constructor);
        case "number":
            return new _1.NumberSchema(constructor);
        case "object":
            return new _1.ObjectSchema(constructor, schemaRefStore);
        case "array":
            return new _1.ArraySchema(constructor, schemaRefStore);
        default:
            throw new Error("Could not find schema for template");
    }
}
exports.default = createSchema;
function getPresetByName(name) {
    switch (name) {
        case "string":
            return _1.Presets.string;
        case "number":
            return _1.Presets.number;
            break;
        case "boolean":
            return _1.Presets.boolean;
        case "object":
            return _1.Presets.object;
        case "any":
            return _1.Presets.any;
        default:
            throw new Error("No preset found for type ".concat(name));
    }
}
exports.getPresetByName = getPresetByName;
