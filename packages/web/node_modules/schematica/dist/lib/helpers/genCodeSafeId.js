"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var strict_safe_chars = [];
for (var i = 65; i < 91; i++) {
    strict_safe_chars.push(String.fromCharCode(i));
}
for (var i = 97; i < 123; i++) {
    strict_safe_chars.push(String.fromCharCode(i));
}
strict_safe_chars.push("$");
strict_safe_chars.push("_");
var safe_chars = __spreadArray([], __read(strict_safe_chars), false);
for (var i = 48; i < 58; i++) {
    safe_chars.push(String.fromCharCode(i));
}
function getRandIndex(arr) {
    return Math.floor(Math.random() * arr.length);
}
function genId(length) {
    if (length === void 0) { length = 10; }
    var id = "";
    for (var i = 0; i < length; i++) {
        if (i === 0) {
            id += strict_safe_chars[getRandIndex(strict_safe_chars)];
        }
        else {
            id += safe_chars[getRandIndex(safe_chars)];
        }
    }
    return id;
}
exports.default = genId;
