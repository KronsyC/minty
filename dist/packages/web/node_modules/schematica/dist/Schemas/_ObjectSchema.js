"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectSchema = void 0;
var __BaseSchema_1 = require("./__BaseSchema");
var _1 = __importStar(require("."));
var ERR_UNKNOWN_REF_1 = __importDefault(require("../errors/Schematica/ERR_UNKNOWN_REF"));
var ObjectSchema = (function (_super) {
    __extends(ObjectSchema, _super);
    function ObjectSchema(template, schemaRefStore) {
        var e_1, _a;
        var _this = _super.call(this, template) || this;
        _this.properties = new Map();
        _this.typecheck = "(!!".concat(_this.id, " && typeof ").concat(_this.id, " === \"object\" && !Array.isArray(").concat(_this.id, "))");
        _this.schemaRefStore = schemaRefStore;
        _this.strict = template.strict || false;
        _this.required = [];
        if (template.required === "all") {
            for (var name in template.properties) {
                _this.required.push(name);
            }
        }
        else {
            _this.required = template.required || [];
        }
        if (template.properties) {
            try {
                for (var _b = __values(Object.entries(template.properties)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
                    if (typeof value === "string" && value.startsWith("$")) {
                        var schemaName = value.slice(1);
                        var sch = schemaRefStore.get(schemaName);
                        if (sch) {
                            _this.properties.set(key, sch);
                        }
                        else {
                            throw new ERR_UNKNOWN_REF_1.default();
                        }
                    }
                    else if (typeof value === "string") {
                        var schema = (0, _1.getPresetByName)(value);
                        schema.name = key;
                        _this.properties.set(key, schema);
                    }
                    else {
                        if (!value.name)
                            value.name = key;
                        _this.properties.set(key, (0, _1.default)(value, schemaRefStore));
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        _this.validateSchema();
        return _this;
    }
    ObjectSchema.prototype.validateSchema = function () {
        var _this = this;
        this.required.forEach(function (r) {
            if (!Array.from(_this.properties.keys()).includes(r)) {
                throw new Error("".concat(r, " is required but not defined by the schema"));
            }
        });
    };
    Object.defineProperty(ObjectSchema.prototype, "structure", {
        get: function () {
            var code = "{";
            var first = true;
            this.properties.forEach(function (v, k) {
                if (!first)
                    code += ",";
                if (v instanceof ObjectSchema) {
                    code += "\"".concat(k, "\":").concat(v.structure);
                }
                else {
                    code += "\"".concat(k, "\":undefined");
                }
                first = false;
            });
            code += "}";
            return code;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ObjectSchema.prototype, "allTypes", {
        get: function () {
            var types = [];
            this.properties.forEach(function (value) {
                if (!types.includes(value.type)) {
                    types.push(value.type);
                }
                if (value instanceof ObjectSchema || value instanceof _1.ArraySchema) {
                    types.push.apply(types, __spreadArray([], __read(value.allTypes.filter(function (t) { return !types.includes(t); })), false));
                }
            });
            return types;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ObjectSchema.prototype, "allChildren", {
        get: function () {
            var children = {};
            this.properties.forEach(function (item, name) {
                var label = item.template.name ? item.name : name;
                children[label] = item;
                if (item instanceof ObjectSchema || item instanceof _1.ArraySchema) {
                    var nested = item.allChildren;
                    for (var key in nested) {
                        var value = nested[key];
                        children[label + "." + key] = value;
                    }
                }
            });
            return children;
        },
        enumerable: false,
        configurable: true
    });
    return ObjectSchema;
}(__BaseSchema_1.BaseSchema));
exports.ObjectSchema = ObjectSchema;
